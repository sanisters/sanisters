# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from sys import prefix
from tokenize import Name
from unicodedata import name
from PyQt5 import QtCore, QtGui, QtWidgets
import random
import os

contacts = {}
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(401, 330)
        MainWindow.setStyleSheet("")
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setGeometry(QtCore.QRect(10, 10, 181, 16))
        self.label_1.setObjectName("label_1")
        
        self.lineEdit_1 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_1.setGeometry(QtCore.QRect(10, 30, 181, 20))
        self.lineEdit_1.setObjectName("lineEdit_1")
        
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 60, 181, 16))
        self.label_2.setObjectName("label_2")
        
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 110, 181, 16))
        self.label_3.setObjectName("label_3")
        
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 130, 181, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")
        
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(210, 10, 181, 16))
        self.label_4.setObjectName("label_4")
        
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(210, 30, 181, 20))
        self.lineEdit_4.setObjectName("lineEdit_4")
        
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(210, 60, 181, 16))
        self.label_5.setObjectName("label_5")
        
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setGeometry(QtCore.QRect(210, 80, 181, 20))
        self.lineEdit_5.setObjectName("lineEdit_5")
        
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(210, 112, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(21)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet(" color: rgb(255, 255, 255);\n"
"background-color: rgb(57,255,20);")
        self.pushButton.setObjectName("pushButton")
        
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 170, 381, 111))
        self.textBrowser.setObjectName("textBrowser")
        MainWindow.setCentralWidget(self.centralwidget)
        
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 401, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionSave)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.pushButton.clicked.connect(lambda: self.pushButton_clicked())
        self.actionNew.triggered.connect(lambda: self.new())
        self.actionSave.triggered.connect(lambda: self.save_file())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "NumberGenerator"))
        self.label_1.setText(_translate("MainWindow", "Enter amount number to be generate"))
        self.label_2.setText(_translate("MainWindow", "Enter prefix of the number"))
        self.label_3.setText(_translate("MainWindow", "Enter amount of digit to be randomize"))
        self.label_4.setText(_translate("MainWindow", "Enter the name of contacts"))
        self.label_5.setText(_translate("MainWindow", "Enter the name of folder"))
        self.pushButton.setText(_translate("MainWindow", "Generate"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        
    def takeinputs(self):
        amount = self.lineEdit_1.text()
        prefix = self.lineEdit_2.text()
        digit = self.lineEdit_3.text()
        name = self.lineEdit_4.text()
        folder = self.lineEdit_5.text()
        return amount, prefix, digit, name, folder
        
    def generate_numbers(self):
        amount = self.lineEdit_1.text()
        prefix = self.lineEdit_2.text()
        digit = self.lineEdit_3.text()
        name = self.lineEdit_4.text()
        
        value = [0] * int(digit)
        number = set()
        self.textBrowser.append("Generating...")
        
        for i in range(int(amount)):
            for j in range(int(digit)):
                value[j] = random.randint(0, 9)
            str_value = [str(i) for i in value]
            new_value = "".join(str_value)
            number.add(prefix + new_value)
        numbers = list(number)
        self.textBrowser.append("...")
        
        for i in range(len(numbers)):
            contacts["{}{}".format(name, i)] = numbers[i]
            self.textBrowser.append("{}: {}".format(name+str(i), numbers[i]))
        
                
    def save_file(self):
        dir = self.lineEdit_5.text()
        current_dir = os.getcwd()
        if not os.path.exists(dir):
            os.mkdir(dir)
            for i, j in contacts.items():
                with open(dir + "/" + i + ".vcf", "w") as f:
                    f.write("BEGIN:VCARD\n")
                    f.write("VERSION:3.0\n")
                    f.write("N:{}\n".format(i))
                    f.write("TEL;CELL:{}\n".format(j))
                    f.write("END:VCARD\n")
            self.textBrowser.append("saved to {}\{} successful".format(current_dir, dir))
        else:
            for i, j in contacts.items():
                with open(dir + "/" + i + ".vcf", "w") as f:
                    f.write("BEGIN:VCARD\n")
                    f.write("VERSION:3.0\n")
                    f.write("N:{}\n".format(i))
                    f.write("TEL;CELL:{}\n".format(j))
                    f.write("END:VCARD\n")
            self.textBrowser.append("saved to {}\{} successful!\n".format(current_dir, dir)) 
                                
    def new(self):
        self.lineEdit_1.setText("")
        self.lineEdit_2.setText("")
        self.lineEdit_3.setText("")
        self.lineEdit_4.setText("")
        self.lineEdit_5.setText("")
        self.textBrowser.setText("")
                
    def pushButton_clicked(self):
        self.generate_numbers()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
